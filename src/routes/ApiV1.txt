        this.app.get('/93AtHome/centerStatistics', (req: Request, res: Response) => {
            res.setHeader('Content-Type', 'application/json');
            const data = this.centerStats.getLast30DaysHourlyStats();
            let dailyHits: number[] = [];
            let dailyBytes: number[] = [];
            data.forEach(d => {
                let hits = 0;
                let bytes = 0;
                d.filter(h => h !== null).forEach(h => {
                    hits += h.hits;
                    bytes += h.bytes;
                });
                dailyHits.push(hits);
                dailyBytes.push(bytes);
            });

            res.status(200).json({
                dailyHits,
                dailyBytes,
                today: this.centerStats.today(),
                hourly: data.at(0)?.map(hour => ([hour.hits, hour.bytes])) || [],
                onlines: this.clusters.filter(c => c.isOnline).length,
                sourceCount: this.sources.length,
                totalFiles: this.files.length,
                totalSize: this.files.reduce((acc, f) => acc + f.size, 0),
                startTime: this.startAt.getTime(),
                rejectedRequests: RateLimiter.rejectedRequest.getLast30DaysHourlyStats().at(0)?.map(hour => hour.hits) || []
            });
        });
        this.app.get('/93AtHome/clusterStatistics', (req: Request, res: Response) => {
            res.setHeader('Content-Type', 'application/json');
            const clusterId = req.query.clusterId as string;
            const cluster = this.clusters.find(c => c.clusterId === clusterId);
            if (cluster) {
                const stats = this.stats.find(s => s.id === clusterId);
                if (stats) {
                    res.status(200).json(stats.getLast30DaysStats());
                } else {
                    res.status(404).send(); // 未找到统计数据
                }
            } else {
                res.status(404).send(); // 未找到集群
            }
        });
        this.app.get('/93AtHome/random', (req: Request, res: Response) => {
            res.status(302);
            res.setHeader('Location', encodeURI(Utilities.getRandomElement(this.files)?.path || ''));
            res.send();
        });
        this.app.get('/93AtHome/syncSources', (req: Request, res: Response) => {
            res.status(200).json(this.sources);
        });